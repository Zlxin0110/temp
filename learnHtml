#include "ros/ros.h"
#include "std_msgs/String.h"

int main(int argc, char **argv)
{
    // 初始化ROS节点
    ros::init(argc, argv, "simple_publisher");
    
    // 创建ROS节点句柄
    ros::NodeHandle nh;

    // 创建发布者，发布话题A
    ros::Publisher topicAPub = nh.advertise<std_msgs::String>("topicA", 10);

    // 创建发布者，发布话题B
    ros::Publisher topicBPub = nh.advertise<std_msgs::String>("topicB", 10);

    // 设置循环频率
    ros::Rate loop_rate(1); // 1Hz

    while (ros::ok())
    {
        // 创建ROS消息
        std_msgs::String msg;
        msg.data = "Hello, TopicA!";

        // 发布消息到话题A
        topicAPub.publish(msg);

        // 等待直到下一个周期
        loop_rate.sleep();

        // 创建另一个消息
        msg.data = "Hello, TopicB!";

        // 发布消息到话题B
        topicBPub.publish(msg);

        // 等待直到下一个周期
        loop_rate.sleep();
    }

    return 0;
}
