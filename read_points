<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Save Messages to File</title>
  <style>
    #messageTextarea {
      display: none; /* 隐藏 textarea 元素 */
    }
  </style>
</head>
<body>

<!-- checkbox 元素 -->
<input type="checkbox" id="recordCheckbox" onclick="toggleRecording()">
<label for="recordCheckbox">记录消息</label>

<!-- textarea 元素 -->
<textarea id="messageTextarea" rows="4" cols="50"></textarea>

<script>
  // JavaScript 代码
  var isRecording = false;
  var recordedMessages = [];
  var saveInterval; // 定时器变量

  // 切换记录状态的函数
  function toggleRecording() {
    isRecording = !isRecording;

    // 如果开始记录，启动定时器
    if (isRecording) {
      saveInterval = setInterval(saveToFile, 5000); // 每5秒保存一次
    } else {
      // 如果停止记录，清理定时器
      clearInterval(saveInterval);
    }
  }

  // 接收消息的函数
  function receiveMessage(message) {
    if (isRecording) {
      // 将消息追加到数组
      recordedMessages.push(message);
    }
  }

  // 保存消息到本地文件的函数
  function saveToFile() {
    if (recordedMessages.length > 0) {
      var content = recordedMessages.join('\n');

      // 创建一个 Blob 对象
      var blob = new Blob([content], { type: 'text/plain' });

      // 创建一个 File 对象
      var file = new File([blob], 'recorded_messages.txt', { type: 'text/plain' });

      // 创建一个下载链接
      var downloadLink = document.createElement('a');
      downloadLink.href = URL.createObjectURL(file);
      downloadLink.download = file.name;

      // 将链接添加到页面并触发点击
      document.body.appendChild(downloadLink);
      downloadLink.click();

      // 清理链接
      document.body.removeChild(downloadLink);

      // 清空已保存的消息
      recordedMessages = [];
    }
  }
</script>

<!-- 模拟接收消息，实际应用中应该根据实际情况调用 receiveMessage -->
<script>
  setTimeout(function() {
    receiveMessage("这是一条新消息。");
  }, 2000);

  setTimeout(function() {
    receiveMessage("又来了一条消息。");
  }, 4000);
</script>

</body>
</html>
